{;       
 :default true
 :alone 500
 :delay 200
 :held 500
 :simlayer-threshold 200

 ; aliases for modifier keys
 :modifiers {:super-hyper [:command :shift :control :option :fn]
             :hyper [:command :shift :control :option]
             :cos [:command :shift :option]
             :cst [:command :shift :control]
             :co [:command :option]
             :cs [:command :shift]
             :ct [:command :control]
             :to [:control :option]
             :ts [:control :shift]
             :os [:option :shift]
             ;
             }


 :froms {;alias
         :delete {:key :delete_or_backspace}
         :return {:key :return_or_enter}
         :tilde {:key :grave_accent_and_tilde}
         ;qw
         }

 :tos {;
       :shift_click {:pkey :button1 :modi :left_shift}

       :delete {:key :delete_or_backspace}
       :return {:key :return_or_enter}
       :tilde {:key :grave_accent_and_tilde}

       :annotate_screen {:key :a :modi :control}
       :annotate_screen_more {:key :a :modi :co}



       ;shortcuts
       :autocomplete {:key :spacebar :modi :control} ;!Tspacebar
       :command_palette {:key :p :modi :cs}

       :capture_screenshot {:key :4 :modi :cs}
       :record_screen {:key :6 :modi :cs}
       :cursor_find_match {:key :d :modi :command}
       :cursor_select_all {:key :l :modi :cs}
       :cursor_above {:key :up_arrow :modi :co}
       :cursor_below {:key :down_arrow :modi :co}
       :acejump {:key :j :modi :cos}
       :acejump_line {:key :l :modi :cos}
       :acejump_selection {:key :s :modi :cos}
       :acejump_multi {:key :m :modi :cos}

       :close_all [{:key :k :modi :command} {:key :w}]
       :close_others [{:key :t :modi :co}]
       :developer_tools [{:key :i :modi :co}]

       :delete_line {:key :k :modi :cs} ;!CSk

       :find_in_project {:key :f :modi :cs} ;!CSf

       :focus_git {:key :g :modi :ts} ;!TSg
       :focus_editor {:key :e :modi :control}
       :focus_explorer {:key :e :modi :cs} ;:!CSOe
       :focus_terminal {:key :j :modi :command}
       :start_debugger {:key :f5}
       :restart_debugger {:key :f5 :modi :cs}

       :go_to_references {:key :f12 :modi :shift}
       :go_to_symbol {:key :o :modi :cs}
       :go_to_symbol_in_workspace {:key :o :modi :cos}
       :search_everywhere {:key :p :modi :co}
       :go_to_implementations {:key :f12 :modi :command}
       :go_to_definition {:key :f12}
       :go_to_line {:key :g :modi :control}
       :go_to_prev_problem {:key :f8 :modi :shift}
       :go_to_next_problem {:key :f8}
       :go_home {:key :up_arrow :modi :command}
       :go_end {:key :down_arrow :modi :command}

       :new_terminal {:key :grave_accent_and_tilde :modi :ts}; !TS`

       :open_next_editor {:key :right_arrow :modi :co}
       :open_prev_editor {:key :left_arrow :modi :co}
       :focus_next_editor_group {:key :f16 :modi :option}
       :focus_prev_editor_group {:key :f16 :modi :os}

       :peek_definition {:key :f12 :modi :option}
       :peek_implementations {:key :f12 :modi :cs}
       :peek_declaration {:key :f19 :modi :control}
       :peek_references {:key :f19 :modi :command}
       :peek_type {:key :f19 :modi :shift}

       :go_back {:key :hyphen :modi :control}
       :go_forward {:key :hyphen :modi :ts}

       :replace {:key :f :modi :co}
       :rename {:key :f2}

       :split_window {:key :backslash :modi :command}; !Cbackslash

       :toggle_sidebar {:key :b :modi :command} ;!Cb

       :expand_selection {:key :right_arrow :modi :cst}
       :shrink_selection {:key :left_arrow :modi :cst}

       :go_to_file {:key :p :modi :command}
       :insert_line_below {:key :return_or_enter :modi :command} ;!Creturn_or_enter
       :insert_line_above {:key :return_or_enter :modi :cs} ;!Creturn_or_enter
       :wrap_emmet {:key :p :modi :hyper}

       ;named symbols
       :open_brace {:key :open_bracket :modi :shift}
       :close_brace {:key :close_bracket :modi :shift}

       :open_paren {:key :9 :modi :shift}
       :close_paren {:key :0 :modi :shift}

       :less_than {:key :comma :modi :shift}
       :greater_than {:key :period :modi :shift}

       :emoji_picker {:key :spacebar :modi :ct} ;!CTspacebar

       :open_1password {:key :backslash :modi :command} ;!OCbackslash

       :take_screenshot {:key :6 :modi :cs} ;!CS6

       :toggle_screen_brush {:key :tab :modi :option} ;!Otab

       ;chrome
       :open_dev_tools {:key :i :modi :co} ;:!COl
       :chrome_full_screen {:key :f :modi :ct}
       :focus_omnibar {:key :l :modi :command}
       :chrome_go_back {:key :open_bracket :modi :command}
       :chrome_go_forward {:key :close_bracket :modi :command}


       ;ableton
       :add_midi_clip {:key :m :modi :cs};!CSm
       :add_midi_track {:key :t :modi :cs}
       :loop_selection {:key :l :modi :command}
       :toggle_clip_device_view {:key :tab :modi :shift}
       :narrow_grid {:key :1 :modi :command}
       :widen_grid {:key :2 :modi :command}
       :snap_to_grid {:key :4 :modi :command}
       :split_clip {:key :e :modi :command}
       ;

       :display_layout_1 {:key :1 :modi :hyper}
       :display_layout_2 {:key :1 :modi :hyper}

       ;snippets
       }

 :templates {;
             :beep "osascript -e 'beep'"
             :beep2 "osascript -e 'beep 2'"
             :new-note "osascript -e 'tell application id \"com.runningwithcrayons.
             \" to run trigger \"new-note\" in workflow \"com.johnlindquist.new-note\" with argument \"\"'"
             :new-blog "osascript -e 'tell application id \"com.runningwithcrayons.Alfred\" to run trigger \"new-blog\" in workflow \"com.johnlindquist.new-blog\" with argument \"\"'"
             :alfred "osascript -e 'tell application \"Alfred 4\" to run trigger \"%s\" in workflow \"%s\" with argument \"%s\"'"
             :code-project "~/.kenv/bin/code-project \"%s\""
             :delay "osascript -e 'delay \"%s\"'"
             :km "osascript -e 'tell application \"Keyboard Maestro Engine\" to do script \"%s\"'"
             :type "osascript -e 'tell application \"System Events\" to keystroke \"%s\"'"
             :type-secret "osascript -e '
                           set out to do shell script \"security find-generic-password -a $USER -s %s -w\"
                           
                           tell application \"System Events\" to keystroke out
                           '"
             :kit "~/.kit/kar \"%s\""
             :focus "~/.kit/kar focus \"%s\""
             :launch "osascript -e 'tell application \"%s\" to activate'"
             :open-chrome ". ~/.kenv/bin/focus-tab %s"
             :open "open \"%s\""
             :open-a "open -a '%s'"
             :paste "~/.simple/bin/paste-input %s"
             :restream "osascript -e 'tell application \"Restream Chat\" to activate'"
             :zsh "zsh ~/.zfunc/'%s'"
             :print "osascript -e '
                        set the clipboard to do shell script \"echo $PLEASE\"
                        tell application \"System Events\"
                                keystroke \"v\" using command down
                        end tell
                     '"
             :modify "~/.simple/bin/modify --%s"
             :pad "~/.simple/bin/pad"
             :test "osascript -e 'say \"poop\"'"
             :datamuse "osascript -e '
                      tell application id \"com.runningwithcrayons.Alfred\" to run trigger \"datamuse\" in workflow \"com.johnlindquist.datamuse\" with argument \"%s\"
                      '"
             ;
             }

 :applications {;
                :ableton ["com.ableton.live"]
                :chrome ["com.google.Chrome"]
                :code ["com.microsoft.VSCode","com.todesktop.230313mzl4w4u92"]
                :fcp ["com.apple.FinalCut"]
                :miro ["com.electron.realtimeboard"]
                :screenflow ["net.telestream.screenflow10"]
                :slack ["com.tinyspeck.slackmacgap"]
                ;; :webstorm ["com.jetbrains.Webstorm"]
                ;
                }
; Layers Are Typically "Thumb Keys" or "Pinky Keys"
 :layers {;
          :caps_lock-mode {:key :caps_lock :alone
                           {:key :escape}}
          :escape-mode {:key :escape nil [;in case a mode gets stuck 😬
                                          {:set ["fn-mode" 0]}
                                          {:set ["opt-mode" 0]}
                                          {:set ["shift-opt-mode" 0]}
                                          {:set ["movement-mode" 0]}
                                          {:set ["cursor-mode" 0]}
                                          {:set ["delete-mode" 0]}
                                          {:set ["editor-mode" 0]}
                                          {:set ["snippet-mode" 0]}]}
          :f23-mode {:key :f23 :alone  {:key :vk_none}}
          :launch-mode {:key :f24 :alone {:key :spacebar :modi :left_option}}
          :non-mode {:key :non_us_backslash :alone {:key :non_us_backslash}}
          :num-mode {:key :keypad_num_lock :alone {:key :vk_none}}
          :shift-mode {:key :shift}
          :tab-mode {:key :tab}

          :tilde-mode {:key :grave_accent_and_tilde :alone {:key :grave_accent_and_tilde}}




          ;
          }
 :simlayers {;
             ;top row
             :zero-mode {:key :0}
             :quick-mode {:key :q}
             :close-mode {:key :w}
             :finder-mode {:key :e}
             :peek-mode {:key :r}
             :go-mode {:key :t}
             :t-mode {:key :t}
             :code-mode {:key :p}
             :backslash-mode {:key :backslash} ;unused 🤔
             ;end top row

            ;begin homerow simlayer
             :fn-mode {:key :hyphen :alone {:key :hyphen}}
             :opt-mode {:key :a}
             :shift-opt-mode {:key :s}
             :shift-mode {:key :d}
             :movement-mode {:key :f}
             :cursor-mode {:key :g}
             :delete-mode {:key :j}
             :editor-mode {:key :k}
             :i-mode {:key :i}
             :period-mode {:key :period}
             :semicolon-mode {:key :semicolon}
             :l-mode {:key :l}
             :kit-mode {:key :n}
             :open-mode {:key :semicolon}
             :snippet-mode {:key :quote}
             ;end homerow

             ;begin bottom row
             :emoji-mode {:key :z}
             :command-mode {:key :c}
             :modify-mode {:key :period}

             :slash-mode {:key :slash}
             ;end bottom row                                                    


             ;begin special keys
             :equals-mode {:key :equal_sign}
             :spacebar-mode {:key :spacebar}
             :password-mode {:key :quote :condi :shift-mode}
             ;end special keys






 ;
             }
 :devices {;; Note - I'm currently using a Kinesis Advantage keyboard for my defaults
           ;; and my macbook hasn't left my desk in a looooooong time...
          ;; :macbook [{:product_id 832 :vendor_id 1452}]

           :kinesis360 [{:product_id 864 :vendor_id 10730}]
           :apple [{:product_id 832 :vendor_id 1452}]}

 :main [;

        {:des "apple"
         :rules [:apple
                 [:slash :left_command nil {:alone :slash}]
                 [:period :left_option nil {:alone :period}]
                 [:left_shift :left_shift nil {:alone :delete}]
                 [:right_shift :right_shift nil {:alone :delete_forward}]


                 ;
                 ]}


        {:des "Displays"
         ;
         :rules [:zero-mode
                                 ;
                 [:1 :display_layout_1]
                 [:2 :display_layout_2]
                 [:3 :!CSTO3]
                 [:4 :!CSTO4]
                                 ;
                 ]}

        {:des "close"
         :rules [:close-mode
                 ;[:m [:modify "wrap-markdown-link"]]
                 ;[:e :wrap_emmet]
                 [:condi :code :close-mode]
                 [:a :close_all]
                 [:o :close_others]

                 [:condi :chrome :close-mode]
                 [:a :close_all]
                 [:o :close_others]
                 ;
                 ]}
        {:des "finder"
         :rules [:finder-mode
                 [:a "open /Applications"]
                 [:d "open ~/Downloads"]
                 [:h "open ~"]

                 ;
                 ]}
        {:des "peek mode"
         :rules [:peek-mode
                 [:h :peek_definition]
                 [:e :peek_implementations]
                 [:n :peek_references]
                 [:i :peek_declaration]
                 [:o :peek_type]]}

        {:des "quick"
         :rules [:quick-mode
                 [:w :annotate_screen]
                 [:e :annotate_screen_more]]}


        {:des "go"
         :rules [:go-mode
                 [:r :go_to_references];
                 [:w :go_to_symbol_in_workspace];
                 [:s :go_to_symbol];
                 [:h :search_everywhere];
                 [:i :go_to_implementations];
                 [:n :go_to_symbol]; g,d is impossible in colemak
                 [:o :go_to_definition]; g,d is impossible in colemak
                 [:l :go_to_line]; g,d is impossible in colemak
                 [:m :go_to_prev_problem]; g,d is impossible in colemak
                 [:comma :go_to_next_problem]; g,d is impossible in colemak

                 ;
                 ]}

        ;begin homerow      
        {:des "control"
         :rules [:fn-mode
                 [:##d :left_shift]


                 [:##h :!Fleft_arrow]
                 [:##j :!Fdown_arrow]
                 [:##k :!Fup_arrow]
                 [:##l :!Fright_arrow]
                ;  ;
                 ]}

        {:des "opt"
         :rules [:opt-mode
                ;;  [:##y :home]

                ;;  [:##o :end]


                 [:##h :!Oleft_arrow]
                 [:##j :!Odown_arrow]
                 [:##k :!Oup_arrow]
                 [:##l :!Oright_arrow]

                 ;
                 ]}
        {:des "shift-opt"
         :rules [:shift-opt-mode
                 [:##h :!OSleft_arrow]
                 [:##j :!OSdown_arrow]
                 [:##k :!OSup_arrow]
                 [:##l :!OSright_arrow]

                 [:##spacebar {:pkey :button1 :modi :left_command}]
                 [:##left_shift :##button2]

                ;;  [:condi :chrome]
                ;;  [:n :chrome_go_back]
                ;;  [:e :chrome_go_forward]

                 ;
                 ]}

        {:des "shift"
         :rules [:shift-mode
                 [:##y :!CSleft_arrow]
                 [:##o :!CSright_arrow]

                 [:##h :!Sleft_arrow]
                 [:##j :!Sdown_arrow]
                 [:##k :!Sup_arrow]
                 [:##l :!Sright_arrow]

                 [:left_shift :shrink_selection]
                 [:return_or_enter :insert_line_above]

                 [:semicolon :expand_selection]
                 [:quote :shrink_selection]

                 [:##m :!Spage_down]
                 [:##comma :!Spage_up]
                 ;
                 ]}


        {:des "movement"
         :rules [:movement-mode

                 [:##y :!Cleft_arrow]
                 [:##o :!Cright_arrow]

                 [:##h :left_arrow]
                 [:##j :down_arrow]
                 [:##k :up_arrow]
                 [:##l :right_arrow]

                 [:semicolon :autocomplete]

                 [:return_or_enter :insert_line_below]
                 [:left_shift :expand_selection]
                 ;
                 ]}

        {:des "cursor"
         :rules [:cursor-mode
                 [:h :cursor_find_match]
                 [:j :cursor_below]
                 [:k :cursor_above]
                 [:j :acejump]
                 [:l :acejump_line]
                 [:m :acejump_multi]
                 [:left_shift :cursor_select_all]
                 [:l :developer_tools]
                 ;
                 ]}



        {:des "delete"
         :rules [:delete-mode
                 [:escape :delete_line :code]
                 [:escape :!Cdelete_or_backspace]
                 [:hyphen :delete_line :code]
                 [:caps_lock :delete_line :code]
                 [:hyphen :!Cdelete_or_backspace]
                 [:a :!Odelete_or_backspace nil {:held :delete_line}]
                 [:s :delete_or_backspace]
                 [:d :delete_forward]
                 [:f :!Odelete_forward]
                 [:g :!Cdelete_forward]
                 ;
                 ]}

        {:des "editor"
         :rules [:editor-mode
                 [:hyphen :focus_next_editor_group]
                 [:a :open_prev_editor]
                 [:r :go_back]
                 [:s :go_forward]
                 [:t :open_next_editor]
                 [:d :focus_prev_editor_group]
                 ;
                 ]}


        {:des "open"
         :rules [:open-mode
                ;;  [:c [:code-project "~/.config"]]                 
                 [:k ["~/.kit/kar update-karabiner-config"]] ;;                  
                 [:w ["~/.kit/kar ~/.kit/cli/edit.js ~/.kenv/scripts/wiki-ten"]]
                ;;  [:k ["~/.kit/kar update-karabiner-config"]] ;; 
                ;;  [:b [:code-project "~/.bin"]]
                ;;  [:z  [:code-project "~/.zfunc"]]
                ;;  [:r  [:code-project "~/.zshrc"]]

                ;;  [:l [:code-project "~/projects/automatoes.com/_layouts"]]
                ;;  [:e [:code-project "~/projects/egghead-io-nextjs"]]
                ;;  [:r [:code-project "~/projects/egghead-rails"]]
                ;;  [:t [:code-project "~/projects/thoughts"]]
                ;;  [:s ["open simple://scripts/simple-switch"]] ; --disable-renderer-accessibility
                ;;  [:h ["open simple://scripts/say-hi \"yo\""]]
                ;;  [:p [:pad]]
                 ;
                 ]}

        {:des "password"
         :rules [[[:quote :2] [:type-secret "ONE_PASSWORD_LOGIN_EGGHEAD"]]
                 [[:quote :1] [:type-secret "MAC_PASSWORD"]]
                 [[:quote :3] [:type-secret "ONE_PASSWORD_LOGIN_PERSONAL"]]
                 ;
                 ]}


        {:des "snippets"
         :rules [:snippet-mode
                 [:c [:c :o :n :s :o :l :e :period :l :o :g :open_paren :close_paren :left_arrow]]  ;console.log()
                 [:a [:a :w :a :i :t :spacebar]]  ;await 
                 [:s [:a :s :y :n :c :spacebar]]  ;async
                 [:n [:spacebar :c :l :a :s :s :!Sn :a :m :e :equal_sign :!Squote :!Squote :left_arrow]] ;className="" 
                ;;  [:l [:open_bracket :a :l :t :close_bracket :open_paren :close_paren :left_arrow :left_arrow]] ;[]()
                 [:e [:type-secret "BUSINESS_EMAIL"]] ;
                 [:g [:type-secret "PERSONAL_EMAIL"]]
                 [:x [:type-secret "SPAM_EMAIL"]]
                 [:j [:type-secret "USERNAME"]]
                 ;
                 ]}

        ;bottom row

        {:des "emoji"
         :rules [:emoji-mode
                 [:a [:paste ""]] ;                
                 [:b [:paste "😊"]] ;blush
                 [:c [:paste "🤡"]] ;Clown
                 [:d [:paste "💀"]] ;death
                 [:e :emoji_picker]
                 [:f [:paste "🔥"]] ;fire
                 [:g [:paste "😬"]] ;grimace
                 [:h [:paste "😍"]] ;heart-eyes
                 [:i [:paste "👀"]] ;I
                 [:j [:paste "😂"]] ;joking
                 [:k [:paste "🤔"]] ;thinking
                 [:l [:paste "❤️"]] ;love
                 [:m [:paste "🤯"]] ;mind blown zmzmzmü§Øü§Ø
                 [:n :emoji_picker] ;
                 [:o [:paste "💩"]] ;pOop
                 [:p [:paste "🎉"]] ;party
                 [:q [:paste "🤫"]] ;quiet
                 [:s [:paste "😅"]] ;sweat
                 [:r [:paste "🏎"]] ;racecar
                 [:s [:paste "😢"]] ;sad
                 [:t [:paste "😭"]] ;thinking
                 [:u [:paste "🤷‍♂️"]] ;shrUg
                 [:v [:paste "😎"]] ;very cool
                 [:w [:paste "😉"]] ;wink:
                 [:x [:paste "😵"]] ;x-eyes
                 [:y [:paste "😅"]] ;sweatY
                 [:left_command [:paste "👍"]]
                 [:left_option [:paste "👎"]]
                 ;
                 ]}

        {:des "command mode"
         :rules [:command-mode
                ;;  [:n [:new-note]] ;h
                ;;  [:t ["~/.simple/bin/new-thought"]] ;a script that creates a new journal mdx file and open in code
                ;;  [:b [:new-blog]] ;a script that creates a new blog md file and open in code
                 [:n :go_end]
                 [:e :go_home]]}


        {:des "modify"
         :rules [:modify

                 ;
                 ]}


        ;apps            
        {:des "chrome"
         :rules [:chrome
                 [:left_command :left_command nil {:alone [:!Ct]}]
                ;;  [:left_option :left_option nil {:alone ["open simple://scripts/list-chrome-tabs"]}]
                ;;  [:right_option :focus_omnibar]
                ;;  [:left_control :left_option nil {:alone [:!CSt]}]
                ;;  [{:key :right_option :modi :left_command} :!COi]
                ;;  [:d :open_dev_tools]                 

                 [:condi :chrome ["multitouch_extension_finger_count_total" 1]]

                 [:condi :chrome ["multitouch_extension_finger_count_total" 2]]
                 [:d :open_dev_tools]
                 [:a :!COleft_arrow]
                 [:t :!COright_arrow]

                 [:condi :chrome :escape-mode]
                 [:f :chrome_full_screen]
                ;;  [:grave_accent_and_tilde :a nil {:delayed {:invoked [:y] :canceled [:x]}}]
                 ;
                 ;
                 ]}
        {:des "code-mode" :rules [:code-mode [:r :rename]]}


        {:des "code"
         :rules [:code
                 [:left_command :left_command nil {:alone :go_to_file}]
                ;;  [:left_option :left_option nil {:alone :focus_terminal}]
                ;;  [:right_option :right_option nil {:alone :command_palette}]
                 [:left_control :left_control nil {:alone :command_palette}]
                 [:right_control :right_control nil {:alone :command_palette}]
                 [:!Cr :replace];


                 [:home :start_debugger]
                 [:end :restart_debugger]

                 [:condi :code :modify-mode]
                 ;view
                 ;note - I try to keep these on my left hand so I can keep my right on the mouse
                 [:condi :code :escape-mode]
                 [:g :focus_git] ;; SCM
                 [:e :focus_explorer] ;; Explorer
                 [:x :focus_explorer] ;; Explorer
                 [:s :!!s] ;; Status Bar
                ;;  [:t :focus_terminal]
                ;;  [:n :new_terminal]
                 [:f :find_in_project]
                 [:z [:!Ck :z]] ;zen modezz
                 [:v :!!v]
                 [:x :!!x]
                 [:p :!!r] ;toggle panel
                 [:semicolon :!!semicolon]


                ;;  [:left_shift :!Cb]
                 ; [:a :toggle_sidebar]

                 ;trackpad
                 [:condi :code ["multitouch_extension_finger_count_total" 1]]
                 [:left_command :left_command nil {:alone :start_debugger}]
                ;;  [:left_option :left_option nil {:alone :restart_debugger}]

                 ;trackpad 2
                 [:condi :code ["multitouch_extension_finger_count_total" 2]]
                 [:t [:button1 :f2]]


                 ;
                 ]}


        {:des "final cut pro"
         :rules [:fcp
                 [{:pkey :button3}
                  [:h {:pkey :button1}]

                  {:afterup {:key :a}}]
                 [:condi :fcp :multitouch_extension_finger_count_total]
                 [:delete_or_backspace [:button1 :delete_or_backspace]]]}





        {:des "slack"
         :rules [:slack
                 [:left_command :left_command nil {:alone :!Ct}]
                 ;
                 ]}



        {:des "caps_lock"
         :rules [:caps_lock-mode
                 [:##caps_lock :left_control]
                 [:a :caps_lock]
                 [:spacebar [:spacebar :equal_sign :spacebar]]
                 [:g :focus_git]
                 ; I don't use a caps_lock key on my keyboard
                 ;
                 ]}

        {:des "launch"
         :rules
         [:l-mode

          [:1 :open_1password]
        ;;   [:a [:launch "Activity Monitor"]]
        ;;   [:o [:launch "Loopback"]]
          ;; [:t ["~/.kit/kar ~/.kit/main/app-launcher.js"]]
        ;;   [:e [:launch "Karabiner-EventViewer"]]
          [:c [:alfred "code" "com.vivaxy.workflow.open-in-vscode" " "]]
          [:d [:launch "Discord"]]
          [:f [:launch "Finder"]];
          [:g [:launch "Google Chrome"]]
        ;;   [:u [:launch "Music"]]
          [:t [:launch "iTerm"]]
          [:k "launchctl kickstart -k org.pqrs.karabiner.karabiner_console_user_server"] ;restart karabiner
          [:y [:launch "YouTube Music"]]
          [:r [:launch "Restream Chat"]]
          [:s [:launch "Slack"]]
          [:c [:launch "Google Chrome"]] ;
          [:v [:launch "VLC"]];
          [:z [:launch "Visual Studio Code"]];viZ
          [:x [:launch "Messages"]];
                 ;
          ]}

        {:des "escape-mode" :rules
         [:escape-mode
          ;
          [:t ["~/.kit/kar todo-pad"]]
          [:a ["~/.kit/kar ~/.kit/main/app-launcher.js"]]
          [:c ["~/.kit/kar auto-center-app"]]
          [:n ["~/.kit/kar journal"]]
          [:w ["~/.kit/kar ~/.kit/cli/edit.js ~/.kenv/scripts/wiki-ten.js"]]
          [:b ["~/.kit/kar bugs"]]
          [:i ["~/.kit/kar script-ideas"]]
          [:r ["~/.kit/kar rhyme-finder"]]
          [:1 :!CO1]
          [:2 :!CO2]
          [:3 :!CO3]
          [:4 :!CO4]
          [:5 :!CO5]
          [:6 :!CO6]
          [:7 :!CO7]
          [:0 :!CO0]
          ;
          ]}








        {:des "spacebar"
         :rules [:spacebar-mode
                 ;symbols [](){}<>
                 [:a :open_bracket]
                 [:s :close_bracket]

                 [:d :open_paren]
                 [:f :close_paren]

                 [:tab [:open_bracket :open_bracket]]

                 [:j :open_brace]
                 [:k :close_brace]

                 [:l :less_than]
                 [:semicolon :greater_than]

                 ;symbol sequences
                 [:hyphen [:!S4 :!Sopen_bracket :!Sclose_bracket :left_arrow]]; ${}
                 [:left_shift [:spacebar :equal_sign :spacebar]]; =
                 [:q [:!S9 :!S0 :equal_sign :greater_than :spacebar]];()=> 
                 [:e [:!S9 :!S9 :!S0 :equal_sign :greater_than :spacebar :open_brace :close_brace :!S0 :left_arrow :left_arrow]];(()=> {})

                 [:g [:spacebar :equal_sign :greater_than :spacebar]]; =>
                 [:h [:equal_sign :open_brace :close_brace :left_arrow]];={}
                 [:b [:equal_sign :open_brace :close_brace :left_arrow]];={}
                 [:quote [:equal_sign :!Squote :!Squote :left_arrow]];=""

                 ;macros


                 ;
                 ]}


        {:des "special characters"
         :rules [:semicolon-mode
                 ;special characters: !@#$%^&*()
                ;;  [:##a :!S1]
                ;;  [:##s :!S2]
                ;;  [:##d :!S3]
                ;;  [:##f :!S4]; 
                ;;  [:##g :!S5]
                ;;  [:##h :!S6]
                ;;  [:##j :!S7]
                ;;  [:##k :!S8]
                ;;  [:##l :!S9]
                ;;  [:##semicolon :!S0]
                 [:e :!S1]; ! exclaim
                 [:a :!S2]; @ at
                 [:h :!S3]; # hash
                 [:d :!S4]; $ dollar
                 [:p :!S5]; % percent
                 [:c :!S6]; ^ caret
                 [:s :!S7]; & amperSand
                 [:b :!S8]; * bullet
                 ; 
                 ]}

        {:des "special characters again"
         :rules [:period-mode
                 ;special characters: !@#$%^&*()
                ;;  [:##a :!S1]
                ;;  [:##s :!S2]
                ;;  [:##d :!S3]
                ;;  [:##f :!S4]; 
                ;;  [:##g :!S5]
                ;;  [:##h :!S6]
                ;;  [:##j :!S7]
                ;;  [:##k :!S8]
                ;;  [:##l :!S9]
                ;;  [:##semicolon :!S0]
                 [:e :!S1]; ! exclaim.e.e.!!!@!@.a@@/e/e/k/k/k/k/k/k/k
                 [:a :!S2]; @ at
                 [:h :!S3]; # hash
                 [:d :!S4]; $ dollar
                 [:p :!S5]; % percent
                 [:c :!S6]; ^ caret
                 [:s :!S7]; & amperSand
                 [:b :!S8]; * bullet
                 [:k [:code-project "~/.dotfiles/karabiner/karabiner.edn ~/.dotfiles/karabiner/"]]
                 ; 
                 ]}

        {:des "slash-mode"
         :rules [:slash-mode
                 ;open urls
                 [:e [:open-chrome "egghead.io"]]
                 [:g [:open-chrome "mail.google.com"]]
                 [:j [:open-chrome "js.new"]];
                 [:k [:open-chrome "github.com/search?q=extension%3A.edn+filename%3Akarabiner.edn&type=Code&ref=advsearch&l=&l="]]
                 [:l [:open-chrome "localhost:3000"]]
                 [:m [:open-chrome "access.mymind.com/cards"]]
                 [:n [:open-chrome "news.google.com"]]
                 [:r [:open-chrome "roamresearch.com/#/app/egghead"]]
                 [:s [:open-chrome "github.com/johnlindquist/simplescripts"]]
                 [:t [:open-chrome "twitter.com"]]
                 [:u [:open-chrome "egghead.io/lessons/new"]];Upload
                 [:x [:open-chrome "next.egghead.io"]]
                 [:y [:open-chrome "youtube.com"]]
;
                 ]}

        {:des "numbers"
         :rules [:tab-mode
                 [:##a :1]
                 [:##s :2]
                 [:##d :3]
                 [:##f :4]; 
                 [:##g :5]
                 [:##h :6]
                 [:##j :7]
                 [:##k :8]
                 [:##l :9]
                 [:##semicolon :0]
                 [:##4 :capture_screenshot]
                 ;
                 ]}

        {:des "remap caps to ctrl"
         :rules [[:caps_lock :left_control]]}






        ;
        ]}




;; rule [:period ["media-mode" 1] nil {:afterup ["media-mode" 0] :alone :period}]
;;       |_____| |_______________| |_| |_________________________________________|
;;        <from>    <to>      <conditions>         <other options>

    ;; !  | means mandatory
    ;; #  | means optional
    ;; C  | left_command
    ;; T  | left_control
    ;; O  | left_option
    ;; S  | left_shift
    ;; F  | fn
    ;; Q  | right_command
    ;; W  | left_control
    ;; E  | right_option
    ;; R  | right_shift
    ;; 
    ;; !! | mandatory command + control + optional + shift (hyper)
    ;; ## | optional any
;; 